{
    "datasets": ["AIME", "MATH"],
    "gsm_types": [],
    "models": {
        "gpt-4o":{
            "name": "gpt-4o-2024-11-20",
            "provider": "openai",
            "api_key_env": "OPENAI_API_KEY",
            "supports_sampling_params": true
        },
        "gpt-4o-mini":{
            "name": "gpt-4o-mini-2024-07-18",
            "provider": "openai",
            "api_key_env": "OPENAI_API_KEY",
            "supports_sampling_params": true
        },
        "llama-3.1-70b-instruct":{
            "name": "meta-llama/llama-3.1-70b-instruct",
            "provider": "openrouter",
            "api_key_env": "OPEN_ROUTER_API_KEY",
            "supports_sampling_params": true
        },
        "llama-3.1-8b-instruct":{
            "name": "meta-llama/llama-3.1-8b-instruct",
            "provider": "openrouter",
            "api_key_env": "OPEN_ROUTER_API_KEY",
            "supports_sampling_params": true
        },
        "gemma2-27b":{
            "name": "google/gemma-2-27b-it",
            "provider": "openrouter",
            "api_key_env": "OPEN_ROUTER_API_KEY",
            "supports_sampling_params": true
        },
        "gemma2-9b":{
            "name": "google/gemma-2-9b-it",
            "provider": "openrouter",
            "api_key_env": "OPEN_ROUTER_API_KEY",
            "supports_sampling_params": true
        }
    },
    "max_reflection_layers": 3,
    "auto_prompt_model": "same",
    "run_test": true,
    "run_analysis": true,

    "MATH_params": {
        "hf_id": "HuggingFaceH4/MATH-500",
        "evaluation_type": "exact_match_latex_normalized",
        "split_name": "test",
        "max_test_samples": 100
    },
    "AIME_params": {
        "hf_id": "opencompass/AIME2025",
        "subset_names": ["AIME2025-I", "AIME2025-II"],
        "split_name": "test",
        "evaluation_type": "exact_string_match"
    },
    "answer_temperature": 0.0,
    "answer_top_p": 1.0,
    "meta_prompt_generation_temperature": 1.0,
    "meta_prompt_generation_top_p": 1.0,

    "use_same_meta_prompt_for_all_layers": false,

    "test_types": {
        "run_base": false,
        "run_cot": true,
        "run_traditional_self_reflection": true,
        "run_multi_layer_self_reflection": true
    }
}
